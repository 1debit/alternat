name: Lambda Push to ECR

on:
  push:
    branches:
      - main

env:
  ECR_REGISTRY: 358789136651.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: ha-nat-functions-lambda
  ALIAS_NAME: prod
  IMAGE_TAG: latest
  FUNCTION_NAME: ha-nat-route-table-lambda

jobs:
  push_to_ecr:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::358789136651:role/github-ha-nat-lambda-push-ecr
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push lambda image to Amazon ECR
      run: |
        docker build . -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  update_lambda_function:
    needs: push_to_ecr
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::640342642087:role/github-ha-nat-lambda-update-function
        aws-region: us-east-1
    - name: Update Lambda Function Code
      run: |
        aws lambda update-function-code --function-name $FUNCTION_NAME --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  publish_lambda_version_alias:
    needs: update_lambda_function
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::640342642087:role/github-ha-nat-lambda-update-function
        aws-region: us-east-1
    - name: Update Lambda Version and Alias
      run: |
        sleep 20 # Give time for previous job to finish updating lambda state
        LAMBDA_VERSION=$(aws lambda publish-version --function-name $FUNCTION_NAME | jq '.Version | tonumber')
        ALIAS_CREATED=$(aws lambda get-alias --function-name $FUNCTION_NAME --name $ALIAS_NAME | jq '.Name')
        if [ -z "${ALIAS_CREATED}" ]; \
        then aws lambda create-alias --function-name $FUNCTION_NAME --description "Production Alias for ha-nat-route-table Lambda" --function-version $LAMBDA_VERSION --name $ALIAS_NAME; \
        else aws lambda update-alias --function-name $FUNCTION_NAME --function-version $LAMBDA_VERSION --name $ALIAS_NAME; fi
